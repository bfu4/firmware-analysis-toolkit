#!/bin/bash

# example:
# docker run --rm -it -v $(pwd):/greynoise -w /build firmware-analysis-toolkit bash -c "./fat.py /greynoise"

DOCKER_ARGS="--rm -it --privileged --network host"
DOCKER_IMAGE="firmware-analysis-toolkit"
DOCKER_WORKDIR="/build"
DOCKER_VOLUME_ARGS=""
DOCKER_CMD="./fat.py"
DOCKER_CMD_ARGS=""

FIRMWARE_FILE=""
QEMU=""

COLOR="\033[1;35m"
RESET="\033[0m"
NEWLINE="\n"

function pretty() {
  printf "${COLOR}[!]${RESET} $@${NEWLINE}"
}

function get_volume() {
   DOCKER_VOLUME_ARGS="-v ${FIRMWARE_FILE}:/mount/$(basename ${FIRMWARE_FILE})"
}

function lets_go() {
   DOCKER_CMD_ARGS="${QEMU} /mount/$(basename ${FIRMWARE_FILE})"
   bash -c "docker run ${DOCKER_ARGS} ${DOCKER_VOLUME_ARGS} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} ${DOCKER_CMD} ${DOCKER_CMD_ARGS}"
}

function usage() {
   pretty './fat [-q qemu-version] [-f FILE]'
}


while getopts 'f:q:' arg;
do
  case "$arg" in
    f)
	FIRMWARE_FILE="${OPTARG}"
	;;
    q) 
	QEMU="-q ${OPTARG}"
	;;
    *) usage && exit;
  esac
done

if [[ -z "${FIRMWARE_FILE}" ]]; then
   pretty "missing firmware file"
   exit
fi

get_volume
lets_go
